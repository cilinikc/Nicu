<html>
    <head>
        <title>JavaScript sample code</title>
    </head>
    <body>
        <h1>Calculation Metal Profile</h1>
        <input type="radio" id="roundbar" onclick="Round_Bar.drawForm()" name="profil"/>
        <label for="roundbar ">Round Bar </label>
        <input type="radio" id="metalsheet" onclick="Metal_Sheet.drawForm()" name="profil"/>
        <label for="metalsheet">Metal Sheet</label>
        <input type="radio" id="angle" onclick="Angle.drawForm()" name="profil" />
        <label for="angle">Profile Angle</label><br /><br />
        
		
	<input type="radio" id="inp" onclick="Inp.drawForm()" name="profil"/>
        <label for="inp">Profile INP</label>
        <input type="radio" id="ipe" onclick="Ipe.drawForm()" name="profil"/>
        <label for="ipe">Profile IPE</label>
        <input type="radio" id="unp" onclick="Unp.drawForm()" name="profil"/>
        <label for="unp">Profile UNP</label><br />
        <br />

        <p id="form"></p>
        <p id="demo"></p>
 <script language="JavaScript" type="text/javascript">

class inpBase {
  constructor(type) {
    this.type = type;
    this.form = document.getElementById('form');
    this.demo = document.getElementById('demo');
  };

  writeForm(txt) {
		this.form.innerHTML = txt;
	};
	
	writeThickness(txt) {
		document.getElementById('thickness_block').innerHTML = txt;
	};
	
	scrie(txt) {
		this.demo.innerHTML += txt;
	};

  getWidth() { return Number(document.getElementById("width").value); };
  getWeight() { return Number(document.getElementById("weight").value); };
  getLength() { return Number(document.getElementById("length").value); };
  getThickness() { return Number(document.getElementById("thickness").value);};
  getDiameter() { return Number(document.getElementById("diameter").value); };

  drawForm() {
		let ntxt='';
    Object.keys(this.coefficient).forEach(function(key){
      ntxt+=`<option>${key}</option>`;
    });
	
		this.writeForm(`
              <table>
                <tr>
              <td><label for="width">Width (m)</label></td><td><select id="width">
				${ntxt}
			  </select>
              </td>
              </tr>
              <tr>
                <td><label for="weight">Total weight (kg)</label></td><td><input id="weight" type="text"></td>
              </tr>
              <tr>
                <td><label for="length">Length (m)</label></td><td><input id="length" type="text"></td>
              </tr>
              </table>
              <button onclick="${ this.type }.calculate()">${ this.type }</button>
        `);
	};

  calculate() {
		let width = this.getWidth();
		let weight = this.getWeight();
		let length = this.getLength();
		
		let pieces = weight / length / this.coefficient[width];
		
		if (!isNaN(pieces)) {
		  alert("Pieces " + pieces);
		  this.scrie(`Profile ${ this.type } Total Weight = ${weight}kg; Width = ${width}mm; Length = ${length}m; Pieces = ${pieces}<br>`);
		  document.getElementById(this.type.toLowerCase()).checked = false;
		  this.writeForm('');
		}
		else 
		  alert('Enter only numbers');
	};
};

class inp extends inpBase {
  constructor() {
    super('Inp');
    this.coefficient = {
      80: 6.1,
      100: 8.5,
      120: 11.5,
      140: 14.7,
      160: 18.5,
      180: 22.5,
      200: 27,
      240: 37,
      260: 43,
      280: 49,
      300: 56
    };
  };
};

class ipe extends inpBase {
  constructor() {
    super('Ipe');
    this.coefficient = {
      80: 6.2,
      100: 8.3,
      120: 10.7,
      140: 13.2,
      160: 16.2,
      180: 19.3,
      200: 23,
      220: 26.9,
      240: 31.5,
      270: 37,
      300: 43.3
    };
  };
};

class unp extends inpBase {
  constructor() {
    super('Unp');
    this.coefficient = {
      80: 8.9,
      100: 10.9,
      120: 13.7,
      140: 16.4,
      160: 19.3,
      180: 22.5,
      200: 26,
      220: 30,
      240: 33.2,
      300: 46.2
    };
  };
};

class angle extends inpBase {
  constructor() {
    super('Angle');
    this.coefficient = {
         0:{
            0:0
        },
        20: {
            3: 0.884
        },
        25: {
            3: 1.123,
            4: 1.466,
            5: 1.793
        },
        30: {
            3: 1.362,
            4: 1.785,
            5: 2.191
        },
        35: {
            4: 2.103
        },
        40: {
            4: 2.422,
            5: 2.988,
            6: 3.538
        },
        45: {
            4: 2.741,
            5: 3.386,
            6: 4.016
        },
        50: {
            5: 3.785,
            6: 4.494,
            7: 5.187
        },
        55: {
            5: 4.183,
            6: 4.972
        },
        60: {
            5: 4.581,
            6: 5.45,
            8: 7.139,
            10: 8.765
        },
        70: {
            6: 6.406,
            7: 7.31,
            8: 8.414,
            10: 10.358
        },
        80: {
            6: 7.362,
            8: 9.689,
            10: 11.952
        },
        90: {
            6: 8.318,
            8: 10.964,
            10: 13.545,
            12: 16.063
        },
        100: {
            8: 12.238,
            10: 14.915,
            12: 17.975,
            15: 22.111
        },
        120: {
            8: 14.788,
            10: 18.326,
            12: 21.8,
            15: 26.891
        },
        150: {
            10: 23.106,
            12: 27.537,
            15: 34.062,
            18: 40.444
        },
        200: {
            16: 48.954,
            18: 54.786,
            20: 60.555,
            24: 71.901
        }
    };
  };

  drawForm() {
		let ntxt='';
    Object.keys(this.coefficient).forEach(function(key){
      ntxt+=`<option>${key}</option>`;
    });
    
		this.writeForm(`
      <table>
        <tr>
          <td><label for="length">Length (m)</label></td><td><input id="length" type="text"></td>
        </tr>
        <tr>
          <td><label for="weight">Total weight (kg)</label></td><td><input id="weight" type="text"></td>
        </tr>
        <tr>
          <td><label for="width">Width (m)</label></td>
            <td>
              <select id="width" onchange='Angle.thicknessForm(this.value)'>
                ${ntxt}
            </select>             
          </td>
        </tr>
        <tr id='thickness_block'></tr>         
      </table>
      <button id='angle_button' onclick="Angle.calculate()" disabled>Angle</button> 
		`);                        
	}

  thicknessForm(width) {
    let ntxt='';
    Object.keys(this.coefficient[width]).forEach(function(key){
      ntxt+=`<option>${key}</option>`;
    });

    this.writeThickness(`
      <td><label for="thickness">Thickness (mm)</label></td>
        <td><select id="thickness">${ntxt}</select></td>
    `);
    document.getElementById('angle_button').disabled = false;
  };

    calculate() {
      let width = this.getWidth();
      let weight = this.getWeight();
      let length = this.getLength();
      let thickness = this.getThickness(); 
		  let pieces = weight / this.coefficient[width][thickness] / length;
    
      if ( !isNaN(pieces) ) {
        alert("Pieces " + pieces);
        this.scrie(`Profile Angle Total weight=${weight}kg; Width=${width}mm; Length=${length}m; Thickness=${thickness}mm; Pieces= ${pieces} <br>`);
        document.getElementById('angle').checked = false;
        this.writeForm('');
      }
      else 
       alert('Enter only numbers');
     
  };
};

class roundBar extends inpBase {
  constructor() {
    super('Round_Bar');
  };
  drawForm() {
		let ntxt='';
    
		this.writeForm(`
       <table>
              	<tr>
                <td><label for="length">Length (m)</label></td><td><input id="length" type="text"></td>
              </tr>
                <tr>
              <td><label for="diameter">Diameter (mm)</label></td><td><input id="diameter" type="text"></td>
              </tr>
               <tr>
                <td><label for="weight">Total weight (kg)</label></td><td><input id="weight" type="text"></td>
              </tr>
              </table>
              <button onclick="${ this.type }.calculate()">${ this.type }</button>         
		`);                        
	};

    calculate() {
      let diameter = this.getDiameter(); 
      let weight = this.getWeight();
      let length = this.getLength();
      const pi = 3.141592;
		  let pieces = (weight / ((pi * diameter * diameter / 1000000) * (2.466 / 0.0012566))) / length;
		
		if (!isNaN(pieces)){
                  alert("Bar pieces " + pieces);
                  this.scrie(`Round Bar Total weight=${weight}kg; Length= ${length}m; Diameter=${diameter}mm; Pieces=${pieces} <br>`);
                  document.getElementById('roundbar').checked = false;
                 this.writeForm('');
                }
                else 
                  alert('Enter only numbers');
        };
};

class metalSheet extends inpBase {
  constructor() {
    super('Metal_Sheet');
  };
  drawForm() {
		let ntxt='';
    
		this.writeForm(`
         <table>
              	<tr>
                <td><label for="length">Length (m)</label></td><td><input id="length" type="text"></td>
              </tr>
                <tr>
              <td><label for="width">Width (m)</label></td><td><input id="width" type="text"></td>
              </tr>
              <tr>
              <td><label for="thickness ">Thickness (mm)</label></td><td><input id="thickness" type="text"></td>
              </tr>
               <tr>
                <td><label for="weight">Total weight (kg)</label></td><td><input id="weight" type="text"></td>
              </tr>
              </table>
              <button onclick="${this.type}.calculate()">${this.type}</button>         
        `);
	};

    calculate() {
      let weight = this.getWeight();
      let length = this.getLength();
      let width = this.getWidth();
	  let thickness = this.getThickness(); 
		let pieces = weight / ((8000 * width * length * thickness) / 1000);
                
                if (!isNaN(pieces)){
                  alert("Pieces " + pieces);
                  this.scrie(`Metal Sheet Total weight=${weight}kg; Width=${width}m; Length=${length}m; Thickness=${thickness}mm; Pieces=${pieces} <br>`);
                  document.getElementById('angle').checked = false;
                  this.writeForm('');
                }
                else 
                  alert('Enter only numbers');
        };
};

var Inp = new inp(), Ipe = new ipe(), Unp = new unp();
var Angle = new angle(), Round_Bar = new roundBar();
var Metal_Sheet= new metalSheet();

      </script>
    </body>
</html>
